%--------------------------------------------------
% Generated by Sokoban.hs
%--------------------------------------------------
% 
% Time 1:
% 
% ...b
% ....
% ..b.
% ..m.
% 
% north
% 
% Time 2:
% 
% ...b
% ..b.
% ..m.
% ....
% 
% east
% 
% Time 3:
% 
% ...b
% ..b.
% ...m
% ....
% 
% north
% 
% Time 4:
% 
% ...b
% ..bm
% ....
% ....
% 
% west
% 
% Time 5:
% 
% ...b
% .bm.
% ....
% ....
% 
% north
% 
% Time 6:
% 
% ..mb
% .b..
% ....
% ....
% 
% west
% 
% Time 7:
% 
% .m.b
% .b..
% ....
% ....
% 
% east
% 
% Time 8:
% 
% ..mb
% .b..
% ....
% ....
% 
% south
% 
% Time 9:
% 
% ...b
% .bm.
% ....
% ....
% 
% north
% 
% Time 10:
% 
% ..mb
% .b..
% ....
% ....
% 
% west
% 
% Time 11:
% 
% .m.b
% .b..
% ....
% ....
% 
% south
% 
% Time 12:
% 
% ...b
% .m..
% .b..
% ....
% 
% west
% 
% Time 13:
% 
% ...b
% m...
% .b..
% ....
% 
% south
% 
% Time 14:
% 
% ...b
% ....
% mb..
% ....
% 
% east
% 
% Time 15:
% 
% ...b
% ....
% .mb.
% ....
% 
% south
% 
% Time 16:
% 
% ...b
% ....
% ..b.
% .m..
% 
% north
% 
% Time 17:
% 
% ...b
% ....
% .mb.
% ....
% 
% west
% 
% Time 18:
% 
% ...b
% ....
% m.b.
% ....
% 
% noop
% 
%--------------------------------------------------

% The given sequence
senses(s2(c_in_1, obj_x1, obj_cell_3_4), 1).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 1).
senses(s2(c_in_2, obj_x3, obj_cell_3_3), 1).
senses(s2(c_in_1, obj_x1, obj_cell_3_3), 2).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 2).
senses(s2(c_in_2, obj_x3, obj_cell_3_2), 2).
senses(s2(c_in_1, obj_x1, obj_cell_4_3), 3).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 3).
senses(s2(c_in_2, obj_x3, obj_cell_3_2), 3).
senses(s2(c_in_1, obj_x1, obj_cell_4_2), 4).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 4).
senses(s2(c_in_2, obj_x3, obj_cell_3_2), 4).
senses(s2(c_in_1, obj_x1, obj_cell_3_2), 5).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 5).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 5).
senses(s2(c_in_1, obj_x1, obj_cell_3_1), 6).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 6).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 6).
senses(s2(c_in_1, obj_x1, obj_cell_2_1), 7).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 7).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 7).
senses(s2(c_in_1, obj_x1, obj_cell_3_1), 8).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 8).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 8).
senses(s2(c_in_1, obj_x1, obj_cell_3_2), 9).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 9).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 9).
senses(s2(c_in_1, obj_x1, obj_cell_3_1), 10).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 10).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 10).
senses(s2(c_in_1, obj_x1, obj_cell_2_1), 11).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 11).
senses(s2(c_in_2, obj_x3, obj_cell_2_2), 11).
senses(s2(c_in_1, obj_x1, obj_cell_2_2), 12).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 12).
senses(s2(c_in_2, obj_x3, obj_cell_2_3), 12).
senses(s2(c_in_1, obj_x1, obj_cell_1_2), 13).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 13).
senses(s2(c_in_2, obj_x3, obj_cell_2_3), 13).
senses(s2(c_in_1, obj_x1, obj_cell_1_3), 14).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 14).
senses(s2(c_in_2, obj_x3, obj_cell_2_3), 14).
senses(s2(c_in_1, obj_x1, obj_cell_2_3), 15).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 15).
senses(s2(c_in_2, obj_x3, obj_cell_3_3), 15).
senses(s2(c_in_1, obj_x1, obj_cell_2_4), 16).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 16).
senses(s2(c_in_2, obj_x3, obj_cell_3_3), 16).
senses(s2(c_in_1, obj_x1, obj_cell_2_3), 17).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 17).
senses(s2(c_in_2, obj_x3, obj_cell_3_3), 17).
senses(s2(c_in_1, obj_x1, obj_cell_1_3), 18).
senses(s2(c_in_2, obj_x2, obj_cell_4_1), 18).
senses(s2(c_in_2, obj_x3, obj_cell_3_3), 18).

% Exogenous actions
exogenous(s(c_north, obj_x1), 1).
exogenous(s(c_east, obj_x1), 2).
exogenous(s(c_north, obj_x1), 3).
exogenous(s(c_west, obj_x1), 4).
exogenous(s(c_north, obj_x1), 5).
exogenous(s(c_west, obj_x1), 6).
exogenous(s(c_east, obj_x1), 7).
exogenous(s(c_south, obj_x1), 8).
exogenous(s(c_north, obj_x1), 9).
exogenous(s(c_west, obj_x1), 10).
exogenous(s(c_south, obj_x1), 11).
exogenous(s(c_west, obj_x1), 12).
exogenous(s(c_south, obj_x1), 13).
exogenous(s(c_east, obj_x1), 14).
exogenous(s(c_south, obj_x1), 15).
exogenous(s(c_north, obj_x1), 16).
exogenous(s(c_west, obj_x1), 17).
exogenous(s(c_noop, obj_x1), 18).

% Elements
is_object(obj_x1).
is_object(obj_x2).
is_object(obj_x3).
is_object(obj_cell_1_1).
is_object(obj_cell_1_2).
is_object(obj_cell_1_3).
is_object(obj_cell_1_4).
is_object(obj_cell_2_1).
is_object(obj_cell_2_2).
is_object(obj_cell_2_3).
is_object(obj_cell_2_4).
is_object(obj_cell_3_1).
is_object(obj_cell_3_2).
is_object(obj_cell_3_3).
is_object(obj_cell_3_4).
is_object(obj_cell_4_1).
is_object(obj_cell_4_2).
is_object(obj_cell_4_3).
is_object(obj_cell_4_4).
is_cell(obj_cell_1_1).
is_cell(obj_cell_1_2).
is_cell(obj_cell_1_3).
is_cell(obj_cell_1_4).
is_cell(obj_cell_2_1).
is_cell(obj_cell_2_2).
is_cell(obj_cell_2_3).
is_cell(obj_cell_2_4).
is_cell(obj_cell_3_1).
is_cell(obj_cell_3_2).
is_cell(obj_cell_3_3).
is_cell(obj_cell_3_4).
is_cell(obj_cell_4_1).
is_cell(obj_cell_4_2).
is_cell(obj_cell_4_3).
is_cell(obj_cell_4_4).

% Concepts
is_concept(in_1).
is_concept(in_2).
is_concept(noop).
is_concept(north).
is_concept(south).
is_concept(east).
is_concept(west).

% Time
is_time(1..18).

% ∃! clause for c_in_1 : at most one
:-
	holds(s2(c_in_1, X, Y), T),
	holds(s2(c_in_1, X, Y2), T),
	Y != Y2.

% ∃! clause for c_in_1 : at least one
:-
	permanent(isa(t_1, X)),
	is_time(T),
	not aux_c_in_1(X, T).

aux_c_in_1(X, T) :-
	holds(s2(c_in_1, X, _), T).

% Incompossibility for c_in_1
incompossible(s2(c_in_1, X, Y), s2(c_in_1, X, Y2)) :-
	permanent(isa(t_1, X)),
	permanent(isa(t_cell, Y)),
	permanent(isa(t_cell, Y2)),
	Y != Y2.

% ∃! clause for c_in_2 : at most one
:-
	holds(s2(c_in_2, X, Y), T),
	holds(s2(c_in_2, X, Y2), T),
	Y != Y2.

% ∃! clause for c_in_2 : at least one
:-
	permanent(isa(t_2, X)),
	is_time(T),
	not aux_c_in_2(X, T).

aux_c_in_2(X, T) :-
	holds(s2(c_in_2, X, _), T).

% Incompossibility for c_in_2
incompossible(s2(c_in_2, X, Y), s2(c_in_2, X, Y2)) :-
	permanent(isa(t_2, X)),
	permanent(isa(t_cell, Y)),
	permanent(isa(t_cell, Y2)),
	Y != Y2.

% Exclusions
% Every action is either noop, north, south, east, or west
% ∀X : man, noop(X) ⊕ north(X) ⊕ south(X) ⊕ east(X) ⊕ west(X)

% At most one
:-
	holds(s(c_noop, X), T),
	holds(s(c_north, X), T).
:-
	holds(s(c_noop, X), T),
	holds(s(c_south, X), T).
:-
	holds(s(c_noop, X), T),
	holds(s(c_west, X), T).
:-
	holds(s(c_north, X), T),
	holds(s(c_south, X), T).
:-
	holds(s(c_north, X), T),
	holds(s(c_west, X), T).
:-
	holds(s(c_south, X), T),
	holds(s(c_west, X), T).
:-
	holds(s(c_east, X), T),
	holds(s(c_noop, X), T).
:-
	holds(s(c_east, X), T),
	holds(s(c_north, X), T).
:-
	holds(s(c_east, X), T),
	holds(s(c_south, X), T).
:-
	holds(s(c_east, X), T),
	holds(s(c_west, X), T).

% At least one
:-
	permanent(isa(t_1, X)),
	is_time(T),
	not holds(s(c_noop, X), T),
	not holds(s(c_north, X), T),
	not holds(s(c_south, X), T),
	not holds(s(c_east, X), T),
	not holds(s(c_west, X), T).

% Incompossibility
incompossible(s(c_noop, X), s(c_north, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_noop, X), s(c_south, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_noop, X), s(c_west, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_north, X), s(c_south, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_north, X), s(c_west, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_south, X), s(c_west, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_east, X), s(c_noop, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_east, X), s(c_north, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_east, X), s(c_south, X)) :-
	permanent(isa(t_1, X)).

incompossible(s(c_east, X), s(c_west, X)) :-
	permanent(isa(t_1, X)).


% Cell adjacency
permanent(isa2(p_right, obj_cell_1_1, obj_cell_2_1)).
permanent(isa2(p_right, obj_cell_2_1, obj_cell_3_1)).
permanent(isa2(p_right, obj_cell_3_1, obj_cell_4_1)).
permanent(isa2(p_right, obj_cell_1_2, obj_cell_2_2)).
permanent(isa2(p_right, obj_cell_2_2, obj_cell_3_2)).
permanent(isa2(p_right, obj_cell_3_2, obj_cell_4_2)).
permanent(isa2(p_right, obj_cell_1_3, obj_cell_2_3)).
permanent(isa2(p_right, obj_cell_2_3, obj_cell_3_3)).
permanent(isa2(p_right, obj_cell_3_3, obj_cell_4_3)).
permanent(isa2(p_right, obj_cell_1_4, obj_cell_2_4)).
permanent(isa2(p_right, obj_cell_2_4, obj_cell_3_4)).
permanent(isa2(p_right, obj_cell_3_4, obj_cell_4_4)).
permanent(isa2(p_below, obj_cell_1_1, obj_cell_1_2)).
permanent(isa2(p_below, obj_cell_2_1, obj_cell_2_2)).
permanent(isa2(p_below, obj_cell_3_1, obj_cell_3_2)).
permanent(isa2(p_below, obj_cell_4_1, obj_cell_4_2)).
permanent(isa2(p_below, obj_cell_1_2, obj_cell_1_3)).
permanent(isa2(p_below, obj_cell_2_2, obj_cell_2_3)).
permanent(isa2(p_below, obj_cell_3_2, obj_cell_3_3)).
permanent(isa2(p_below, obj_cell_4_2, obj_cell_4_3)).
permanent(isa2(p_below, obj_cell_1_3, obj_cell_1_4)).
permanent(isa2(p_below, obj_cell_2_3, obj_cell_2_4)).
permanent(isa2(p_below, obj_cell_3_3, obj_cell_3_4)).
permanent(isa2(p_below, obj_cell_4_3, obj_cell_4_4)).

% Walls
permanent(isa(p_is_not_wall, obj_cell_1_1)).
permanent(isa(p_is_not_wall, obj_cell_1_2)).
permanent(isa(p_is_not_wall, obj_cell_1_3)).
permanent(isa(p_is_not_wall, obj_cell_1_4)).
permanent(isa(p_is_not_wall, obj_cell_2_1)).
permanent(isa(p_is_not_wall, obj_cell_2_2)).
permanent(isa(p_is_not_wall, obj_cell_2_3)).
permanent(isa(p_is_not_wall, obj_cell_2_4)).
permanent(isa(p_is_not_wall, obj_cell_3_1)).
permanent(isa(p_is_not_wall, obj_cell_3_2)).
permanent(isa(p_is_not_wall, obj_cell_3_3)).
permanent(isa(p_is_not_wall, obj_cell_3_4)).
permanent(isa(p_is_not_wall, obj_cell_4_1)).
permanent(isa(p_is_not_wall, obj_cell_4_2)).
permanent(isa(p_is_not_wall, obj_cell_4_3)).
permanent(isa(p_is_not_wall, obj_cell_4_4)).
